{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jose\\\\Documents\\\\Coding\\\\fetch-n-render-project\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, Fragment } from 'react';\nimport Pagination from './Pagination';\nimport useDataApi from './useDataApi';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [currentPage, setCurrentPage] = useState(1);\n  const pageSize = 10;\n  const [{\n    data,\n    isLoading,\n    isError\n  }, doFetch] = useDataApi(\"https://hn.algolia.com/api/v1/search?query=MIT\", {\n    hits: []\n  });\n  const handlePageChange = e => {\n    setCurrentPage(Number(e.target.textContent));\n  };\n  let page = data.hits;\n  if (page.length >= 1) {\n    page = paginate(page, currentPage, pageSize);\n    console.log(`currentPage: ${currentPage}`);\n  }\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [isLoading ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading ...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"list-group\",\n      children: page.map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"list-group-item\",\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          href: item.url,\n          children: item.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 15\n        }, this)\n      }, item.objectID, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Pagination, {\n      items: data.hits,\n      pageSize: pageSize,\n      onPageChange: handlePageChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"x8uA/fkpB04U+E3NqZrgvGmWKyM=\", false, function () {\n  return [useDataApi];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Fragment","Pagination","useDataApi","jsxDEV","_jsxDEV","App","_s","currentPage","setCurrentPage","pageSize","data","isLoading","isError","doFetch","hits","handlePageChange","e","Number","target","textContent","page","length","paginate","console","log","children","fileName","_jsxFileName","lineNumber","columnNumber","className","map","item","href","url","title","objectID","items","onPageChange","_c","$RefreshReg$"],"sources":["C:/Users/jose/Documents/Coding/fetch-n-render-project/src/App.js"],"sourcesContent":["import React, { useState, Fragment } from 'react';\r\nimport Pagination from './Pagination';\r\nimport useDataApi from './useDataApi';\r\nimport './App.css';\r\n\r\nfunction App() {\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const pageSize = 10;\r\n  const [{ data, isLoading, isError }, doFetch] = useDataApi(\r\n    \"https://hn.algolia.com/api/v1/search?query=MIT\",\r\n    {\r\n      hits: [],\r\n    }\r\n  );\r\n\r\n  const handlePageChange = (e) => {\r\n    setCurrentPage(Number(e.target.textContent));\r\n  };\r\n\r\n  let page = data.hits;\r\n  if (page.length >= 1) {\r\n    page = paginate(page, currentPage, pageSize);\r\n    console.log(`currentPage: ${currentPage}`);\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      {isLoading ? (\r\n        <div>Loading ...</div>\r\n      ) : (\r\n        <ul className=\"list-group\">\r\n          {page.map((item) => (\r\n            <li key={item.objectID} className=\"list-group-item\">\r\n              <a href={item.url}>{item.title}</a>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      )}\r\n      <Pagination\r\n        items={data.hits}\r\n        pageSize={pageSize}\r\n        onPageChange={handlePageChange}\r\n      ></Pagination>\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,QAAQ,QAAQ,OAAO;AACjD,OAAOC,UAAU,MAAM,cAAc;AACrC,OAAOC,UAAU,MAAM,cAAc;AACrC,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnB,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGT,QAAQ,CAAC,CAAC,CAAC;EACjD,MAAMU,QAAQ,GAAG,EAAE;EACnB,MAAM,CAAC;IAAEC,IAAI;IAAEC,SAAS;IAAEC;EAAQ,CAAC,EAAEC,OAAO,CAAC,GAAGX,UAAU,CACxD,gDAAgD,EAChD;IACEY,IAAI,EAAE;EACR,CACF,CAAC;EAED,MAAMC,gBAAgB,GAAIC,CAAC,IAAK;IAC9BR,cAAc,CAACS,MAAM,CAACD,CAAC,CAACE,MAAM,CAACC,WAAW,CAAC,CAAC;EAC9C,CAAC;EAED,IAAIC,IAAI,GAAGV,IAAI,CAACI,IAAI;EACpB,IAAIM,IAAI,CAACC,MAAM,IAAI,CAAC,EAAE;IACpBD,IAAI,GAAGE,QAAQ,CAACF,IAAI,EAAEb,WAAW,EAAEE,QAAQ,CAAC;IAC5Cc,OAAO,CAACC,GAAG,CAAE,gBAAejB,WAAY,EAAC,CAAC;EAC5C;EAEA,oBACEH,OAAA,CAACJ,QAAQ;IAAAyB,QAAA,GACNd,SAAS,gBACRP,OAAA;MAAAqB,QAAA,EAAK;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,gBAEtBzB,OAAA;MAAI0B,SAAS,EAAC,YAAY;MAAAL,QAAA,EACvBL,IAAI,CAACW,GAAG,CAAEC,IAAI,iBACb5B,OAAA;QAAwB0B,SAAS,EAAC,iBAAiB;QAAAL,QAAA,eACjDrB,OAAA;UAAG6B,IAAI,EAAED,IAAI,CAACE,GAAI;UAAAT,QAAA,EAAEO,IAAI,CAACG;QAAK;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI;MAAC,GAD5BG,IAAI,CAACI,QAAQ;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAElB,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CACL,eACDzB,OAAA,CAACH,UAAU;MACToC,KAAK,EAAE3B,IAAI,CAACI,IAAK;MACjBL,QAAQ,EAAEA,QAAS;MACnB6B,YAAY,EAAEvB;IAAiB;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpB,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEf;AAACvB,EAAA,CAxCQD,GAAG;EAAA,QAGsCH,UAAU;AAAA;AAAAqC,EAAA,GAHnDlC,GAAG;AA0CZ,eAAeA,GAAG;AAAC,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}