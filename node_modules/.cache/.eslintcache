[{"C:\\Users\\jose\\Documents\\Coding\\fetch-n-render-project\\src\\index.js":"1","C:\\Users\\jose\\Documents\\Coding\\fetch-n-render-project\\src\\reportWebVitals.js":"2","C:\\Users\\jose\\Documents\\Coding\\fetch-n-render-project\\src\\App.js":"3","C:\\Users\\jose\\Documents\\Coding\\fetch-n-render-project\\src\\Pagination.js":"4","C:\\Users\\jose\\Documents\\Coding\\fetch-n-render-project\\src\\useDataApi.js":"5","C:\\Users\\jose\\Documents\\Coding\\fetch-n-render-project\\src\\dataFetchReducer.js":"6"},{"size":426,"mtime":1693517072847,"results":"7","hashOfConfig":"8"},{"size":375,"mtime":1693514841697,"results":"9","hashOfConfig":"8"},{"size":1386,"mtime":1693517956691,"results":"10","hashOfConfig":"8"},{"size":856,"mtime":1693520348891,"results":"11","hashOfConfig":"8"},{"size":946,"mtime":1693514841698,"results":"12","hashOfConfig":"8"},{"size":606,"mtime":1693515079145,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","suppressedMessages":"16","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"6fh6cl",{"filePath":"17","messages":"18","suppressedMessages":"19","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"20","messages":"21","suppressedMessages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23"},{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","suppressedMessages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30"},{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\jose\\Documents\\Coding\\fetch-n-render-project\\src\\index.js",[],[],"C:\\Users\\jose\\Documents\\Coding\\fetch-n-render-project\\src\\reportWebVitals.js",[],[],"C:\\Users\\jose\\Documents\\Coding\\fetch-n-render-project\\src\\App.js",["34","35"],[],"import React, { useState, Fragment } from 'react';\r\nimport Pagination from './Pagination';\r\nimport useDataApi from './useDataApi';\r\nimport './App.css';\r\n\r\n// Define the paginate function here\r\nconst paginate = (items, pageNumber, pageSize) => {\r\n  const start = (pageNumber - 1) * pageSize;\r\n  let page = items.slice(start, start + pageSize);\r\n  return page;\r\n};\r\n\r\nfunction App() {\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const pageSize = 10;\r\n  const [{ data, isLoading, isError }, doFetch] = useDataApi(\r\n    \"https://hn.algolia.com/api/v1/search?query=MIT\",\r\n    {\r\n      hits: [],\r\n    }\r\n  );\r\n\r\n  const handlePageChange = (e, page) => {\r\n    setCurrentPage(page);\r\n  };  \r\n\r\n  let page = data.hits;\r\n  if (page.length >= 1) {\r\n    page = paginate(page, currentPage, pageSize);\r\n    console.log(`currentPage: ${currentPage}`);\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      {isLoading ? (\r\n        <div>Loading ...</div>\r\n      ) : (\r\n        <ul className=\"list-group\">\r\n          {page.map((item) => (\r\n            <li key={item.objectID} className=\"list-group-item\">\r\n              <a href={item.url}>{item.title}</a>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      )}\r\n      <Pagination\r\n        items={data.hits}\r\n        pageSize={pageSize}\r\n        onPageChange={handlePageChange}\r\n      ></Pagination>\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\jose\\Documents\\Coding\\fetch-n-render-project\\src\\Pagination.js",[],[],"C:\\Users\\jose\\Documents\\Coding\\fetch-n-render-project\\src\\useDataApi.js",["36"],[],"import React, { useState, useEffect, useReducer } from 'react';\r\nimport axios from 'axios';\r\nimport dataFetchReducer from './dataFetchReducer';\r\n\r\nfunction useDataApi(initialUrl, initialData) {\r\n  const [url, setUrl] = useState(initialUrl);\r\n\r\n  const [state, dispatch] = useReducer(dataFetchReducer, {\r\n    isLoading: false,\r\n    isError: false,\r\n    data: initialData,\r\n  });\r\n\r\n  useEffect(() => {\r\n    let didCancel = false;\r\n    const fetchData = async () => {\r\n      dispatch({ type: \"FETCH_INIT\" });\r\n      try {\r\n        const result = await axios(url);\r\n        if (!didCancel) {\r\n          dispatch({ type: \"FETCH_SUCCESS\", payload: result.data });\r\n        }\r\n      } catch (error) {\r\n        if (!didCancel) {\r\n          dispatch({ type: \"FETCH_FAILURE\" });\r\n        }\r\n      }\r\n    };\r\n    fetchData();\r\n    return () => {\r\n      didCancel = true;\r\n    };\r\n  }, [url]);\r\n\r\n  return [state, setUrl];\r\n}\r\n\r\nexport default useDataApi;\r\n","C:\\Users\\jose\\Documents\\Coding\\fetch-n-render-project\\src\\dataFetchReducer.js",[],[],{"ruleId":"37","severity":1,"message":"38","line":16,"column":29,"nodeType":"39","messageId":"40","endLine":16,"endColumn":36},{"ruleId":"37","severity":1,"message":"41","line":16,"column":40,"nodeType":"39","messageId":"40","endLine":16,"endColumn":47},{"ruleId":"37","severity":1,"message":"42","line":1,"column":8,"nodeType":"39","messageId":"40","endLine":1,"endColumn":13},"no-unused-vars","'isError' is assigned a value but never used.","Identifier","unusedVar","'doFetch' is assigned a value but never used.","'React' is defined but never used."]